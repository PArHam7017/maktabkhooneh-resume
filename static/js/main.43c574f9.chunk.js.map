{"version":3,"sources":["components/Navigation/Navigation.js","components/FullPage/FullPage.js","components/TitlesSection/TitlesSection.js","components/AboutSection/AboutSection.js","components/SkillCard/SkillCard.js","components/SkillSection/SkillSection.js","components/Resume/Resume.js","serviceWorker.js","index.js"],"names":["Navigation","props","toggle","bind","state","isOpen","this","setState","Navbar","color","dark","fixed","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","activeClass","to","spy","smooth","offset","duration","delay","NavLink","Button","handleChangeThemeClick","Provider","value","size","React","Component","propTypes","PropTypes","bool","string","role","oneOfType","tag","func","type","FullPage","children","style","backgroundColor","TitlesSection","themeColor","data","themeOptions","changeColor","name","onMouseOver","onMouseLeave","title","subtitle","Object","keys","links","map","key","url","nextProps","prevState","themeId","AboutSection","sections","items","p","content","SkillCard","skill","src","image","alt","SkillSection","eachSkill","Resume","changeTheme","length","snowEffect","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43c574f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Element } from \"react-scroll\";\r\nimport { IconContext } from \"react-icons\";\r\nimport {FaPencilAlt} from 'react-icons/fa';\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nexport default class Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark={true} fixed=\"top\" light expand=\"md\">\r\n                    <NavbarBrand href=\"/maktabkhooneh-resume/\">PArHam7017</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle}/>\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <Link\r\n                                    activeClass=\"active\"\r\n                                    to=\"HOME\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={0}\r\n                                    duration={500}\r\n                                    delay={0}>\r\n                                    <NavLink href=\"#HOME\">HOME</NavLink>\r\n                                </Link>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Link\r\n                                    activeClass=\"active\"\r\n                                    to=\"ABOUT\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={0}\r\n                                    duration={500}\r\n                                    delay={0}>\r\n                                <NavLink href=\"#ABOUT\">ABOUT</NavLink>\r\n                                </Link>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Link\r\n                                    activeClass=\"active\"\r\n                                    to=\"SKILLS\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={0}\r\n                                    duration={500}\r\n                                    delay={0}>\r\n                                <NavLink href=\"#SKILLS\">SKILLS</NavLink>\r\n                                </Link>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button className={\"btn \"} onClick={this.props.handleChangeThemeClick}>\r\n                                    <IconContext.Provider value={{ size: \"1rem\" }}>\r\n                                        <div><FaPencilAlt /></div>\r\n                                    </IconContext.Provider>\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    light: PropTypes.bool,\r\n    dark: PropTypes.bool,\r\n    fixed: PropTypes.string,\r\n    color: PropTypes.string,\r\n    role: PropTypes.string,\r\n    expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n    // pass in custom element to use\r\n};\r\n\r\nNavbarBrand.propTypes = {\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n    // pass in custom element to use\r\n};\r\n\r\nNavbarToggler.propTypes = {\r\n    type: PropTypes.string,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n    // pass in custom element to use\r\n};\r\n","import React, {Component} from 'react';\nimport './FullPage.css'\n\nclass FullPage extends Component {\n    render() {\n        const { children } = this.props;\n        return (\n            <div style={{backgroundColor: this.props.backgroundColor}} className={`full-page ${this.props.className || ''}`}>\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default FullPage","import React from 'react';\r\nimport \"./TitlesSection.css\";\r\nimport data from '../../data';\r\nimport FullPage from \"../FullPage/FullPage\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport { IconContext } from \"react-icons\";\r\nimport {FaAngleDown} from 'react-icons/fa';\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\n\r\nexport default class TitlesSection extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            color: \"white\" ,\r\n            themeColor: data.themeOptions[0][0]\r\n        };\r\n        this.changeColor = this.changeColor.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const {themeId} = nextProps;\r\n\r\n        return {\r\n            themeColor: data.themeOptions[themeId][0],\r\n        };\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({\r\n            color: this.state.color === \"white\" ? \"yellow\" : \"white\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Element name=\"HOME\"/>\r\n                <FullPage className={\"first\"} backgroundColor={this.state.themeColor}>\r\n                    <h1 className=\"title\"\r\n                        style={{color: this.state.color}}\r\n                        onMouseOver={this.changeColor}\r\n                        onMouseLeave={() => {this.changeColor();}}>\r\n                        {data.title}\r\n                    </h1>\r\n                    <div><h2>{data.subtitle}</h2></div>\r\n                    <div className=\"icons-wrapper\">\r\n                        {Object.keys(data.links).map(key => {\r\n                            return (\r\n                                <div className=\"icon\">\r\n                                    <SocialIcon url={data.links[key]}/>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"bottom-page\">\r\n                        <Link\r\n                            activeClass=\"active\"\r\n                            to=\"ABOUT\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={0}\r\n                            duration={500}\r\n                            delay={0}>\r\n                            <IconContext.Provider value={{ size: \"5rem\" }}>\r\n                                <div><FaAngleDown /></div>\r\n                            </IconContext.Provider>\r\n                        </Link>\r\n                    </div>\r\n                </FullPage>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"./AboutSection.css\";\r\nimport data from '../../data';\r\nimport FullPage from \"../FullPage/FullPage\";\r\nimport {Element, Link} from \"react-scroll\";\r\nimport {IconContext} from \"react-icons\";\r\nimport {FaAngleDown} from 'react-icons/fa'\r\n\r\nexport default class AboutSection extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            themeColor: data.themeOptions[0][1]\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const {themeId} = nextProps;\r\n\r\n        return {\r\n            themeColor: data.themeOptions[themeId][1],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Element name={\"ABOUT\"} />\r\n                <FullPage className={\"second\"} backgroundColor={this.state.themeColor}>\r\n                    <h3>{data.sections[0].title}</h3>\r\n                    <div>\r\n                        {data.sections[0].items.map(p => {\r\n                            return <p>{p.content}</p>;\r\n                        })}\r\n                    </div>\r\n                    <div className=\"bottom-page\">\r\n                        <Link\r\n                            activeClass=\"active\"\r\n                            to=\"SKILLS\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={0}\r\n                            duration={500}\r\n                            delay={0}>\r\n                            <IconContext.Provider value={{ size: \"5rem\" }}>\r\n                                <div><FaAngleDown /></div>\r\n                            </IconContext.Provider>\r\n                        </Link>\r\n                    </div>\r\n                </FullPage>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} alt={skill.content.title}/>\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React from 'react';\r\nimport \"./SkillSection.css\";\r\nimport {Element} from 'react-scroll';\r\nimport data from '../../data';\r\nimport FullPage from \"../FullPage/FullPage\";\r\nimport SkillCard from \"../SkillCard/SkillCard\";\r\n\r\nexport default class SkillSection extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            themeColor: data.themeOptions[0][2]\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const {themeId} = nextProps;\r\n\r\n        return {\r\n            themeColor: data.themeOptions[themeId][2],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Element name={\"SKILLS\"} />\r\n                <FullPage className={\"third\"} backgroundColor={this.state.themeColor}>\r\n                    <h3>{data.sections[1].title}</h3>\r\n                    <div className=\"cards-wrapper\">\r\n                        {data.sections[1].items.map(eachSkill => {\r\n                            return (\r\n                                <SkillCard skill={eachSkill}/>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </FullPage>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Resume.css';\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport TitlesSection from \"../TitlesSection/TitlesSection\";\r\nimport AboutSection from \"../AboutSection/AboutSection\";\r\nimport SkillSection from \"../SkillSection/SkillSection\";\r\nimport data from \"../../data\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nexport default class Resume extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            themeId: 0\r\n        };\r\n\r\n        this.changeTheme = this.changeTheme.bind(this);\r\n    }\r\n\r\n    changeTheme() {\r\n        const {themeId} = this.state;\r\n        if (themeId < data.themeOptions.length - 1) {\r\n            this.setState({themeId: themeId + 1})\r\n        } else {\r\n            this.setState({themeId: 0})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let snowEffect = null;\r\n        if (this.state.themeId === 2) {\r\n             snowEffect = <SnowStorm />;\r\n        } else {\r\n             snowEffect = null;\r\n        }\r\n\r\n        return (\r\n            <div className={\"resume\"}>\r\n                {snowEffect}\r\n                <Navigation handleChangeThemeClick={this.changeTheme}/>\r\n                <TitlesSection themeId={this.state.themeId}/>\r\n                <AboutSection themeId={this.state.themeId}/>\r\n                <SkillSection themeId={this.state.themeId}/>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './assets/bootstrap-4.3.1-dist/css/bootstrap.min.css';\nimport './style/reset.css';\nimport './style/style.css';\nimport './index.css';\n\nimport Resume from \"./components/Resume/Resume\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Resume />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}